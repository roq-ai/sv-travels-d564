generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model booking {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  scheduled_time DateTime @db.Timestamp(6)
  customer_id    String?  @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  user           user?    @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model driver {
  id                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  availability_status Boolean
  user_id             String?  @db.Uuid
  created_at          DateTime @default(now()) @db.Timestamp(6)
  updated_at          DateTime @default(now()) @db.Timestamp(6)
  user                user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rating              rating[]
  ride                ride[]
}

model loyalty_program {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  points      Int
  customer_id String?  @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user?    @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model rating {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rating_value Int
  customer_id  String?  @db.Uuid
  driver_id    String?  @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user         user?    @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  driver       driver?  @relation(fields: [driver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ride {
  id                String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  pickup_location   String         @db.VarChar(255)
  drop_off_location String         @db.VarChar(255)
  ride_option       String         @db.VarChar(255)
  customer_id       String?        @db.Uuid
  driver_id         String?        @db.Uuid
  created_at        DateTime       @default(now()) @db.Timestamp(6)
  updated_at        DateTime       @default(now()) @db.Timestamp(6)
  user              user?          @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  driver            driver?        @relation(fields: [driver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  trip_history      trip_history[]
}

model trip_history {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ride_id     String?  @db.Uuid
  customer_id String?  @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user?    @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ride        ride?    @relation(fields: [ride_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email           String            @unique @db.VarChar(255)
  firstName       String?           @db.VarChar(255)
  lastName        String?           @db.VarChar(255)
  roq_user_id     String            @db.VarChar(255)
  tenant_id       String            @db.VarChar(255)
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  booking         booking[]
  company         company[]
  driver          driver[]
  loyalty_program loyalty_program[]
  rating          rating[]
  ride            ride[]
  trip_history    trip_history[]
}
